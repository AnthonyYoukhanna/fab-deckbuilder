# Generated by Django 5.2.2 on 2025-06-10 23:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CardSubType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="CardType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="FunctionalKeyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Keyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Rarity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Set",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "code",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                ("release_date", models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Card",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unique_id", models.CharField(max_length=100, unique=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("type_text", models.CharField(blank=True, max_length=200, null=True)),
                ("played_horizontally", models.BooleanField(default=False)),
                ("cost", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "pitch",
                    models.IntegerField(
                        blank=True,
                        choices=[(3, "Blue (3)"), (2, "Yellow (2)"), (1, "Red (1)")],
                        null=True,
                    ),
                ),
                ("power", models.CharField(blank=True, max_length=10, null=True)),
                ("defense", models.CharField(blank=True, max_length=10, null=True)),
                ("health", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "intelligence",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("arcane", models.CharField(blank=True, max_length=10, null=True)),
                ("is_token", models.BooleanField(default=False)),
                ("is_starter", models.BooleanField(default=False)),
                ("blitz_legal", models.BooleanField(default=True)),
                ("cc_legal", models.BooleanField(default=True)),
                ("commoner_legal", models.BooleanField(default=False)),
                ("ll_legal", models.BooleanField(default=False)),
                ("variations", models.ManyToManyField(blank=True, to="cards.card")),
                (
                    "subtypes",
                    models.ManyToManyField(blank=True, to="cards.cardsubtype"),
                ),
                (
                    "types",
                    models.ManyToManyField(
                        blank=True, related_name="cards", to="cards.cardtype"
                    ),
                ),
                (
                    "functional_keywords",
                    models.ManyToManyField(blank=True, to="cards.functionalkeyword"),
                ),
                ("keywords", models.ManyToManyField(blank=True, to="cards.keyword")),
            ],
        ),
        migrations.CreateModel(
            name="UserCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                (
                    "card",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cards.card"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CardPrinting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unique_id", models.CharField(max_length=100, unique=True)),
                ("edition", models.CharField(blank=True, max_length=10, null=True)),
                ("foiling", models.CharField(blank=True, max_length=10, null=True)),
                ("image_url", models.URLField()),
                ("tcgplayer_url", models.URLField(blank=True, null=True)),
                ("artists", models.JSONField(blank=True, default=list)),
                ("card_number", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "card",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="printings",
                        to="cards.card",
                    ),
                ),
                (
                    "rarity",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cards.rarity",
                    ),
                ),
                (
                    "set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="cards.set"
                    ),
                ),
            ],
            options={
                "unique_together": {("card", "set", "foiling", "rarity", "edition")},
            },
        ),
    ]
